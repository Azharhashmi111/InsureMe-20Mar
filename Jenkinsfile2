pipeline {
  agent any

  tools {
    maven 'M3'
    }
  
  stages {
    stage('CheckOut') {
      steps {
        echo 'Checkout the source code from GitHub'
        git branch: 'main', url: 'https://github.com/karthikpyati777/InsureMe-20Mar.git'
            }
    }
    
    stage('Package the Application') {
      steps {
        echo " Packaing the Application"
        sh 'mvn clean package'
            }
    }
    
    stage('Publish Reports using HTML') {
      steps {
      publishHTML([allowMissing: false, alwaysLinkToLastBuild: false, keepAll: false, reportDir: '/var/lib/jenkins/workspace/Insureme/target/surefire-reports', reportFiles: 'index.html', reportName: 'HTML Report', reportTitles: '', useWrapperFileDirectly: true])
            }
    }
    
    stage('Docker Image Creation') {
      steps {
       sh 'docker build -t karthik854/insureprojectdec3:latest .'
            }
    }

    stage('DockerLogin') {
      steps {
          withCredentials([usernamePassword(credentialsId: 'dockeruserid', passwordVariable: 'dockerhubpass', usernameVariable: 'dockerhubuser')]) {
          sh "docker login -u ${dockerhubuser} -p ${dockerhubpass}"
               }
             }
           }

     stage('Push Image to DockerHub') {
      steps {
        sh 'docker push karthik854/insureprojectdec3:latest'
            }
    }

    // stage('Deploy docker using ansible') {
      //steps {
      // ansiblePlaybook credentialsId: 'private-key', disableHostKeyChecking: true, installation: 'Ansible2', inventory: '/etc/ansible/hosts', playbook: 'deploy.yml', vaultTmpPath: ''
        //    }
    //}


stage('Deploy to Dev') {
            steps {
                ansiblePlaybook playbook: 'deploy_app.yml', inventory: '/etc/ansible/hosts', tags: 'dev'
            }
        }

stage('Deploy to Prod') {
            steps {
                input message: 'Proceed to Prod Deployment?'
                ansiblePlaybook playbook: 'deploy_app.yml', inventory: '/etc/ansible/hosts', tags: 'prod'
            }
        }

  }
}

